name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run full CI pipeline
      run: npm run ci

    - name: Build for production
      run: npm run build:prod

    - name: Create tarball
      run: npm pack

    - name: Get tarball name
      id: tarball
      run: |
        TARBALL=$(ls *.tgz)
        echo "TARBALL_NAME=$TARBALL" >> $GITHUB_OUTPUT
        echo "Found tarball: $TARBALL"
        ls -la *.tgz

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## 📁 Node Utils CLI - Release ${{ steps.version.outputs.VERSION }}
          
          A powerful CLI tool for directory analysis with tree visualization, file statistics, and line counting capabilities.
          
          ## ✨ What's New
          
          - Check the commits since the last release for detailed changes
          - Bug fixes and performance improvements
          
          ## 📦 Installation
          
          ### Global Installation
          ```bash
          npm install -g @ssit-hub/utils-scripts@${{ steps.version.outputs.VERSION }}
          ```
          
          ### Using npx (No Installation Required)
          ```bash
          npx @ssit-hub/utils-scripts@${{ steps.version.outputs.VERSION }} list-dir --help
          ```
          
          ## 🚀 Quick Usage
          
          ```bash
          # Analyze current directory
          node-utils list-dir
          
          # Analyze specific directory with line counting
          node-utils list-dir --path ./src --config my-config.yml
          
          # Enable debug mode
          node-utils --debug list-dir
          ```
          
          ## 📊 Features
          
          - 🌳 Beautiful tree visualization
          - 📊 Comprehensive file statistics  
          - 💻 Code line counting and analysis
          - 🎯 Smart filtering with patterns
          - 📄 Export to timestamped files
          - 🔧 YAML configuration support
          
          ## 📚 Documentation
          
          - [GitHub Repository](https://github.com/duyvu871/utils-scripts)
          - [NPM Package](https://www.npmjs.com/package/@ssit-hub/utils-scripts)
          
          ---
          
          **Made with ❤️ by duyvu871**
        draft: false
        prerelease: false

    - name: Upload tarball to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.tarball.outputs.TARBALL_NAME }}
        asset_name: ${{ steps.tarball.outputs.TARBALL_NAME }}
        asset_content_type: application/gzip

  npm-publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build:prod

    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 